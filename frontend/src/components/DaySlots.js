import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { format } from 'date-fns';
export const DaySlots = ({ date, slots, isToday, onAddSlot, onEditSlot, onDeleteSlot, }) => {
    const canAddSlot = slots.length < 2;
    const getCategoryColor = (category) => {
        const colors = {
            'Work': 'bg-blue-100 text-blue-800 border-blue-200',
            'Personal': 'bg-green-100 text-green-800 border-green-200',
            'Health': 'bg-red-100 text-red-800 border-red-200',
            'Education': 'bg-purple-100 text-purple-800 border-purple-200',
            'Social': 'bg-yellow-100 text-yellow-800 border-yellow-200',
            'General': 'bg-gray-100 text-gray-800 border-gray-200'
        };
        return colors[category] || colors.General;
    };
    return (_jsxs("div", { className: "bg-white rounded-lg shadow-sm border p-4", children: [_jsxs("div", { className: "flex items-center justify-between mb-4", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("h3", { className: `text-lg font-medium ${isToday ? 'text-purple-600' : 'text-gray-900'}`, children: format(date, 'EEEE, dd MMMM') }), isToday && (_jsx("span", { className: "text-sm text-purple-600 font-medium", children: "(Today)" }))] }), canAddSlot && (_jsx("button", { onClick: () => {
                            onAddSlot();
                        }, className: "p-2 rounded-full bg-purple-100 text-purple-600 hover:bg-purple-200 transition-colors", children: _jsx("svg", { className: "h-5 w-5", fill: "none", viewBox: "0 0 24 24", stroke: "currentColor", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M12 6v6m0 0v6m0-6h6m-6 0H6" }) }) }))] }), _jsx("div", { className: "space-y-3", children: slots.length === 0 ? (_jsxs("div", { className: "text-center py-8 text-gray-500", children: [_jsx("svg", { className: "mx-auto h-12 w-12 text-gray-400", fill: "none", viewBox: "0 0 24 24", stroke: "currentColor", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" }) }), _jsx("p", { className: "mt-2 text-sm", children: "No slots scheduled" }), canAddSlot && (_jsx("button", { onClick: () => {
                                onAddSlot();
                            }, className: "mt-2 text-purple-600 hover:text-purple-700 text-sm font-medium", children: "Add your first slot" }))] })) : (slots.map((slot) => (_jsxs("div", { className: "flex items-center justify-between p-3 bg-gray-50 rounded-lg", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsxs("div", { className: "text-sm font-medium text-gray-900", children: [slot.start_time, " - ", slot.end_time] }), _jsx("span", { className: `inline-flex items-center px-2 py-1 rounded-full text-xs font-medium border ${getCategoryColor(slot.category || 'General')}`, children: slot.category || 'General' }), slot.is_recurring && (_jsx("span", { className: "inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800", children: "Recurring" })), !slot.is_recurring && (_jsx("span", { className: "inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800", children: "Exception" }))] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("button", { onClick: () => onEditSlot(slot), className: "p-1 text-gray-400 hover:text-gray-600", children: _jsx("svg", { className: "h-4 w-4", fill: "none", viewBox: "0 0 24 24", stroke: "currentColor", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" }) }) }), _jsx("button", { onClick: () => onDeleteSlot(slot.id), className: "p-1 text-gray-400 hover:text-red-600", children: _jsx("svg", { className: "h-4 w-4", fill: "none", viewBox: "0 0 24 24", stroke: "currentColor", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" }) }) })] })] }, slot.id)))) })] }));
};
